var OpenTokAdapter=function(){"use strict";function n(n){this.session=n,this.session.on({connectionDestroyed:function(n){this.trigger("client_left",n.connection.connectionId)},connectionCreated:function(n){n.connection.data&&n.connection.data.name&&this.trigger("set_name",n.connection.connectionId,n.connection.data.name)},"signal:opentok-editor-operation":function(n){if(n.from.connectionId!==this.session.connection.connectionId){var o=JSON.parse(n.data);this.trigger("operation",o.operation),this.trigger("cursor",n.from.connectionId,o.cursor)}},"signal:opentok-editor-cursor":function(n){if(n.from.connectionId!==this.session.connection.connectionId){var o=JSON.parse(n.data);this.trigger("cursor",n.from.connectionId,o)}}},this)}return n.prototype.sendOperation=function(n,o,e){this.session.signal({type:"opentok-editor-operation",data:JSON.stringify({revision:n,operation:o,cursor:e})},function(n){n||this.trigger("ack")}.bind(this))},n.prototype.sendCursor=function(n){this.session.signal({type:"cursor",data:JSON.stringify(n)})},n.prototype.registerCallbacks=function(n){this.callbacks=n},n.prototype.trigger=function(n){var o=Array.prototype.slice.call(arguments,1),e=this.callbacks&&this.callbacks[n];e&&e.apply(this,o)},n}(),OpenTokEditor=angular.module("opentok-editor",["opentok"]).directive("otEditor",["OTSession","$window",function(n){return{restrict:"E",scope:{modes:"="},template:'<div class="opentok-editor-mode-select" ng-show="!connecting"><select ng-model="selectedMode" name="modes" ng-options="mode.name for mode in modes"></select></div><div ng-if="connecting" class="opentok-editor-connecting">Connecting...</div><div ng-show="!connecting"><div class="opentok-editor"></div></div>',link:function(o,e,t){var i,c,s,r=e.context.querySelector("div.opentok-editor"),d=(e.context.querySelector("select"),!1),a=n.session;o.connecting=!0;var l=o.modes.filter(function(n){return n.value===t.mode});o.selectedMode=l.length>0?l[0]:o.modes[0];var p=function(n,e){c||(c=new ot.EditorClient(n,e,new OpenTokAdapter(a),new ot.CodeMirrorAdapter(i)),o.$apply(function(){o.connecting=!1,setTimeout(function(){i.refresh()},1e3)}))},u=function(){i&&!d&&(d=!0,i.setValue(s.str),p(s.revision,s.clients))},g=function(){i=CodeMirror(r,t),s?u():setTimeout(function(){p(0,[])},1e4)};a.on({sessionConnected:function(){g()},connectionCreated:function(n){c&&n.connection.connectionId!==a.connection.connectionId&&a.signal({type:"opentok-editor-doc",to:n.connection,data:JSON.stringify({revision:c.revision,clients:[],str:i.getValue()})})},"signal:opentok-editor-doc":function(n){s=JSON.parse(n.data),u()}}),a.isConnected()&&g(),o.$watch("selectedMode",function(){i&&i.setOption("mode",o.selectedMode.value)})}}}]);